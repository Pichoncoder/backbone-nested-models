/*! backbone-nested-models - 2.0.0 */
!function(a,b){"object"==typeof exports?module.exports=b(require("backbone")):"function"==typeof define&&define.amd?define(["backbone"],function(c){return a.returnExportsGlobal=b(c)}):a.returnExportsGlobal=b(a.Backbone)}(this,function(a){var b=a.Model,c=a.Collection;a.Model.prototype.setRelation=function(a,d,e){var f=this.attributes[a];this.idAttribute||"id";if(e.unset&&f&&delete f.parent,this.relations&&_.has(this.relations,a)){if(f&&f instanceof c)return d=d instanceof c||d instanceof Array?d.models||d:[d],f.set(d,e),f;if(f&&f instanceof b)return d instanceof b&&(d=d.toJSON()),f.set(d,e),f;e._parent=this,d=new this.relations[a](d,e),d.parent=this}return d},a.Model.prototype.set=function(a,b,c){var d,e,f,g,h,i,j,k;if(null==a)return this;if("object"==typeof a?(e=a,c=b):(e={})[a]=b,c||(c={}),!this._validate(e,c))return!1;f=c.unset,h=c.silent,g=[],i=this._changing,this._changing=!0,i||(this._previousAttributes=_.clone(this.attributes),this.changed={}),k=this.attributes,j=this._previousAttributes,this.idAttribute in e&&(this.id=e[this.idAttribute]);for(d in e)b=e[d],b=this.setRelation(d,b,c),_.isEqual(k[d],b)||g.push(d),_.isEqual(j[d],b)?delete this.changed[d]:this.changed[d]=b,f?delete k[d]:k[d]=b;if(!h){g.length&&(this._pending=!0);for(var l=0,m=g.length;m>l;l++)this.trigger("change:"+g[l],this,k[g[l]],c)}if(i)return this;if(!h)for(;this._pending;)this._pending=!1,this.trigger("change",this,c);return this._pending=!1,this._changing=!1,this},a.Model.prototype.toJSON=function(a){var b=_.clone(this.attributes);return _.each(this.relations,function(a,c){_.has(b,c)?b[c]=b[c].toJSON():b[c]=(new a).toJSON()}),b},a.Model.prototype.clone=function(a){return new this.constructor(this.toJSON())},a.Collection.prototype.resetRelations=function(b){_.each(this.models,function(c){_.each(c.relations,function(d,e){c.get(e)instanceof a.Collection&&c.get(e).trigger("reset",c,b)})})},a.Collection.prototype.reset=function(a,b){b||(b={});for(var c=0,d=this.models.length;d>c;c++)this._removeReference(this.models[c]);return b.previousModels=this.models,this._reset(),this.add(a,_.extend({silent:!0},b)),b.silent||(this.trigger("reset",this,b),this.resetRelations(b)),this}});